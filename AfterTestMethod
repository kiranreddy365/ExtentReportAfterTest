[TearDown]  

        public void AfterTest() 

        { 

            var status = TestContext.CurrentContext.Result.Outcome.Status; 

            Console.WriteLine(status); 

            var stacktrace = TestContext.CurrentContext.Result.StackTrace; 

            Console.WriteLine(stacktrace); 

            var errorMessage = TestContext.CurrentContext.Result.Message; 

            Console.WriteLine(errorMessage); 

  

            switch (status) 

            { 

                case TestStatus.Failed: 

                    logger.Log(Status.Fail, "Failed Test"); 

                    CommonMethods commonMethods = new CommonMethods(); 

                    string screenshotPath = commonMethods.CaptureScreenshot(TestContext.CurrentContext.Test.Name); 

                    logger.AddScreenCaptureFromPath(screenshotPath); 

                    break; 

  

                case TestStatus.Skipped: 

                    logger.Log(Status.Skip, "Skipped"); 

                    break; 

  

                case TestStatus.Passed: 

                    logger.Log(Status.Pass, "Passed"); 

                    break; 

  

                default: 

                    logger.Info("Inconclusive Status"); 

                    break; 

            } 

  

        } 
        
        
        //take screenshot
        
        public string CaptureScreenshot(string screenshotName)
        {
            Screenshot screenshot = ((ITakesScreenshot)driver).GetScreenshot();
            string path = "C:\\Users\\kr\\source\\repos\\PageObjectModel\\PageObjectModel\\Screenshots\\" + screenshotName + ".png";
            screenshot.SaveAsFile(path, ScreenshotImageFormat.Png);
            return path;
        }
